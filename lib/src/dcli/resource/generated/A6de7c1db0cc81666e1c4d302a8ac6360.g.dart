// ignore: prefer_relative_imports
import 'package:dcli/dcli.dart';

/// GENERATED -- GENERATED
///
/// DO NOT MODIFIY
///
/// This script is generated via [Resource.pack()].
///
/// GENERATED - GENERATED

class A6de7c1db0cc81666e1c4d302a8ac6360 extends PackedResource {
  /// PackedResource - ../../pig_app/build/web/flutter.js
  const A6de7c1db0cc81666e1c4d302a8ac6360();

  /// A hash of the resource (pre packed) calculated by
  /// [calculateHash].
  /// This hash can be used to check if the resource needs to
  /// be updated on the target system.
  /// Use :
  /// ```dart
  ///   calculateHash(pathToResource).hexEncode() == packResource.checksum
  /// ```
  /// to compare the checksum of the local file with
  /// this checksum
  @override
  String get checksum =>
      'cddf1df4b24271025d678c660dd26df3';

  /// <package>/resources relative path to the original resource.
  @override
  String get originalPath => 'www_root/flutter.js';

  @override
  String get content => '''
KCgpPT57dmFyIEw9KCk9Pm5hdmlnYXRvci52ZW5kb3I9PT0iR29vZ2xlIEluYy4ifHxuYXZpZ2F0b3Iu
YWdlbnQ9PT0iRWRnLyIsRT0oKT0+dHlwZW9mIEltYWdlRGVjb2Rlcj4idSI/ITE6TCgpLFA9KCk9PnR5
cGVvZiBJbnRsLnY4QnJlYWtJdGVyYXRvcjwidSImJnR5cGVvZiBJbnRsLlNlZ21lbnRlcjwidSIsVz0o
KT0+e2xldCBhPVswLDk3LDExNSwxMDksMSwwLDAsMCwxLDUsMSw5NSwxLDEyMCwwXTtyZXR1cm4gV2Vi
QXNzZW1ibHkudmFsaWRhdGUobmV3IFVpbnQ4QXJyYXkoYSkpfSx3PXtoYXNJbWFnZUNvZGVjczpFKCks
aGFzQ2hyb21pdW1CcmVha0l0ZXJhdG9yczpQKCksc3VwcG9ydHNXYXNtR0M6VygpLGNyb3NzT3JpZ2lu
SXNvbGF0ZWQ6d2luZG93LmNyb3NzT3JpZ2luSXNvbGF0ZWR9O2Z1bmN0aW9uIGQoLi4uYSl7cmV0dXJu
IG5ldyBVUkwoXyguLi5hKSxkb2N1bWVudC5iYXNlVVJJKS50b1N0cmluZygpfWZ1bmN0aW9uIF8oLi4u
YSl7cmV0dXJuIGEuZmlsdGVyKHQ9PiEhdCkubWFwKCh0LGkpPT5pPT09MD9TKHQpOmooUyh0KSkpLmZp
bHRlcih0PT50Lmxlbmd0aCkuam9pbigiLyIpfWZ1bmN0aW9uIGooYSl7bGV0IHQ9MDtmb3IoO3Q8YS5s
ZW5ndGgmJmEuY2hhckF0KHQpPT09Ii8iOyl0Kys7cmV0dXJuIGEuc3Vic3RyaW5nKHQpfWZ1bmN0aW9u
IFMoYSl7bGV0IHQ9YS5sZW5ndGg7Zm9yKDt0PjAmJmEuY2hhckF0KHQtMSk9PT0iLyI7KXQtLTtyZXR1
cm4gYS5zdWJzdHJpbmcoMCx0KX1mdW5jdGlvbiBUKGEsdCl7cmV0dXJuIGEuY2FudmFzS2l0QmFzZVVy
bD9hLmNhbnZhc0tpdEJhc2VVcmw6dC5lbmdpbmVSZXZpc2lvbiYmIXQudXNlTG9jYWxDYW52YXNLaXQ/
XygiaHR0cHM6Ly93d3cuZ3N0YXRpYy5jb20vZmx1dHRlci1jYW52YXNraXQiLHQuZW5naW5lUmV2aXNp
b24pOiJjYW52YXNraXQifXZhciB2PWNsYXNze2NvbnN0cnVjdG9yKCl7dGhpcy5fc2NyaXB0TG9hZGVk
PSExfXNldFRydXN0ZWRUeXBlc1BvbGljeSh0KXt0aGlzLl90dFBvbGljeT10fWFzeW5jIGxvYWRFbnRy
eXBvaW50KHQpe2xldHtlbnRyeXBvaW50VXJsOmk9ZCgibWFpbi5kYXJ0LmpzIiksb25FbnRyeXBvaW50
TG9hZGVkOnIsbm9uY2U6ZX09dHx8e307cmV0dXJuIHRoaXMuX2xvYWRKU0VudHJ5cG9pbnQoaSxyLGUp
fWFzeW5jIGxvYWQodCxpLHIsZSxuKXtuPz89bz0+e28uaW5pdGlhbGl6ZUVuZ2luZShyKS50aGVuKGw9
PmwucnVuQXBwKCkpfTtsZXR7ZW50cnlQb2ludEJhc2VVcmw6c309cjtpZih0LmNvbXBpbGVUYXJnZXQ9
PT0iZGFydDJ3YXNtIilyZXR1cm4gdGhpcy5fbG9hZFdhc21FbnRyeXBvaW50KHQsaSxzLG4pO3tsZXQg
bz10Lm1haW5Kc1BhdGg/PyJtYWluLmRhcnQuanMiLGw9ZChzLG8pO3JldHVybiB0aGlzLl9sb2FkSlNF
bnRyeXBvaW50KGwsbixlKX19ZGlkQ3JlYXRlRW5naW5lSW5pdGlhbGl6ZXIodCl7dHlwZW9mIHRoaXMu
X2RpZENyZWF0ZUVuZ2luZUluaXRpYWxpemVyUmVzb2x2ZT09ImZ1bmN0aW9uIiYmKHRoaXMuX2RpZENy
ZWF0ZUVuZ2luZUluaXRpYWxpemVyUmVzb2x2ZSh0KSx0aGlzLl9kaWRDcmVhdGVFbmdpbmVJbml0aWFs
aXplclJlc29sdmU9bnVsbCxkZWxldGUgX2ZsdXR0ZXIubG9hZGVyLmRpZENyZWF0ZUVuZ2luZUluaXRp
YWxpemVyKSx0eXBlb2YgdGhpcy5fb25FbnRyeXBvaW50TG9hZGVkPT0iZnVuY3Rpb24iJiZ0aGlzLl9v
bkVudHJ5cG9pbnRMb2FkZWQodCl9X2xvYWRKU0VudHJ5cG9pbnQodCxpLHIpe2xldCBlPXR5cGVvZiBp
PT0iZnVuY3Rpb24iO2lmKCF0aGlzLl9zY3JpcHRMb2FkZWQpe3RoaXMuX3NjcmlwdExvYWRlZD0hMDts
ZXQgbj10aGlzLl9jcmVhdGVTY3JpcHRUYWcodCxyKTtpZihlKWNvbnNvbGUuZGVidWcoIkluamVjdGlu
ZyA8c2NyaXB0PiB0YWcuIFVzaW5nIGNhbGxiYWNrLiIpLHRoaXMuX29uRW50cnlwb2ludExvYWRlZD1p
LGRvY3VtZW50LmhlYWQuYXBwZW5kKG4pO2Vsc2UgcmV0dXJuIG5ldyBQcm9taXNlKChzLG8pPT57Y29u
c29sZS5kZWJ1ZygiSW5qZWN0aW5nIDxzY3JpcHQ+IHRhZy4gVXNpbmcgUHJvbWlzZXMuIFVzZSB0aGUg
Y2FsbGJhY2sgYXBwcm9hY2ggaW5zdGVhZCEiKSx0aGlzLl9kaWRDcmVhdGVFbmdpbmVJbml0aWFsaXpl
clJlc29sdmU9cyxuLmFkZEV2ZW50TGlzdGVuZXIoImVycm9yIixvKSxkb2N1bWVudC5oZWFkLmFwcGVu
ZChuKX0pfX1hc3luYyBfbG9hZFdhc21FbnRyeXBvaW50KHQsaSxyLGUpe2lmKCF0aGlzLl9zY3JpcHRM
b2FkZWQpe3RoaXMuX3NjcmlwdExvYWRlZD0hMCx0aGlzLl9vbkVudHJ5cG9pbnRMb2FkZWQ9ZTtsZXR7
bWFpbldhc21QYXRoOm4sanNTdXBwb3J0UnVudGltZVBhdGg6c309dCxvPWQocixuKSxsPWQocixzKTt0
aGlzLl90dFBvbGljeSE9bnVsbCYmKGw9dGhpcy5fdHRQb2xpY3kuY3JlYXRlU2NyaXB0VVJMKGwpKTts
ZXQgYz0oYXdhaXQgaW1wb3J0KGwpKS5jb21waWxlU3RyZWFtaW5nKGZldGNoKG8pKSxmO3QucmVuZGVy
ZXI9PT0ic2t3YXNtIj9mPShhc3luYygpPT57bGV0IG09YXdhaXQgaS5za3dhc207cmV0dXJuIHdpbmRv
dy5fZmx1dHRlcl9za3dhc21JbnN0YW5jZT1tLHtza3dhc206bS53YXNtRXhwb3J0cyxza3dhc21XcmFw
cGVyOm0sZmZpOnttZW1vcnk6bS53YXNtTWVtb3J5fX19KSgpOmY9UHJvbWlzZS5yZXNvbHZlKHt9KSxh
d2FpdChhd2FpdChhd2FpdCBjKS5pbnN0YW50aWF0ZShhd2FpdCBmKSkuaW52b2tlTWFpbigpfX1fY3Jl
YXRlU2NyaXB0VGFnKHQsaSl7bGV0IHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7ci50
eXBlPSJhcHBsaWNhdGlvbi9qYXZhc2NyaXB0IixpJiYoci5ub25jZT1pKTtsZXQgZT10O3JldHVybiB0
aGlzLl90dFBvbGljeSE9bnVsbCYmKGU9dGhpcy5fdHRQb2xpY3kuY3JlYXRlU2NyaXB0VVJMKHQpKSxy
LnNyYz1lLHJ9fTthc3luYyBmdW5jdGlvbiBiKGEsdCxpKXtpZih0PDApcmV0dXJuIGE7bGV0IHIsZT1u
ZXcgUHJvbWlzZSgobixzKT0+e3I9c2V0VGltZW91dCgoKT0+e3MobmV3IEVycm9yKGAke2l9IHRvb2sg
bW9yZSB0aGFuICR7dH1tcyB0byByZXNvbHZlLiBNb3Zpbmcgb24uYCx7Y2F1c2U6Yn0pKX0sdCl9KTty
ZXR1cm4gUHJvbWlzZS5yYWNlKFthLGVdKS5maW5hbGx5KCgpPT57Y2xlYXJUaW1lb3V0KHIpfSl9dmFy
IHk9Y2xhc3N7c2V0VHJ1c3RlZFR5cGVzUG9saWN5KHQpe3RoaXMuX3R0UG9saWN5PXR9bG9hZFNlcnZp
Y2VXb3JrZXIodCl7aWYoIXQpcmV0dXJuIGNvbnNvbGUuZGVidWcoIk51bGwgc2VydmljZVdvcmtlciBj
b25maWd1cmF0aW9uLiBTa2lwcGluZy4iKSxQcm9taXNlLnJlc29sdmUoKTtpZighKCJzZXJ2aWNlV29y
a2VyImluIG5hdmlnYXRvcikpe2xldCBvPSJTZXJ2aWNlIFdvcmtlciBBUEkgdW5hdmFpbGFibGUuIjty
ZXR1cm4gd2luZG93LmlzU2VjdXJlQ29udGV4dHx8KG8rPWAKVGhlIGN1cnJlbnQgY29udGV4dCBpcyBO
T1Qgc2VjdXJlLmAsbys9YApSZWFkIG1vcmU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2Vu
LVVTL2RvY3MvV2ViL1NlY3VyaXR5L1NlY3VyZV9Db250ZXh0c2ApLFByb21pc2UucmVqZWN0KG5ldyBF
cnJvcihvKSl9bGV0e3NlcnZpY2VXb3JrZXJWZXJzaW9uOmksc2VydmljZVdvcmtlclVybDpyPWQoYGZs
dXR0ZXJfc2VydmljZV93b3JrZXIuanM/dj0ke2l9YCksdGltZW91dE1pbGxpczplPTRlM309dCxuPXI7
dGhpcy5fdHRQb2xpY3khPW51bGwmJihuPXRoaXMuX3R0UG9saWN5LmNyZWF0ZVNjcmlwdFVSTChuKSk7
bGV0IHM9bmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIobikudGhlbihvPT50aGlzLl9nZXRO
ZXdTZXJ2aWNlV29ya2VyKG8saSkpLnRoZW4odGhpcy5fd2FpdEZvclNlcnZpY2VXb3JrZXJBY3RpdmF0
aW9uKTtyZXR1cm4gYihzLGUsInByZXBhcmVTZXJ2aWNlV29ya2VyIil9YXN5bmMgX2dldE5ld1NlcnZp
Y2VXb3JrZXIodCxpKXtpZighdC5hY3RpdmUmJih0Lmluc3RhbGxpbmd8fHQud2FpdGluZykpcmV0dXJu
IGNvbnNvbGUuZGVidWcoIkluc3RhbGxpbmcvQWN0aXZhdGluZyBmaXJzdCBzZXJ2aWNlIHdvcmtlci4i
KSx0Lmluc3RhbGxpbmd8fHQud2FpdGluZztpZih0LmFjdGl2ZS5zY3JpcHRVUkwuZW5kc1dpdGgoaSkp
cmV0dXJuIGNvbnNvbGUuZGVidWcoIkxvYWRpbmcgZnJvbSBleGlzdGluZyBzZXJ2aWNlIHdvcmtlci4i
KSx0LmFjdGl2ZTt7bGV0IHI9YXdhaXQgdC51cGRhdGUoKTtyZXR1cm4gY29uc29sZS5kZWJ1ZygiVXBk
YXRpbmcgc2VydmljZSB3b3JrZXIuIiksci5pbnN0YWxsaW5nfHxyLndhaXRpbmd8fHIuYWN0aXZlfX1h
c3luYyBfd2FpdEZvclNlcnZpY2VXb3JrZXJBY3RpdmF0aW9uKHQpe2lmKCF0fHx0LnN0YXRlPT09ImFj
dGl2YXRlZCIpaWYodCl7Y29uc29sZS5kZWJ1ZygiU2VydmljZSB3b3JrZXIgYWxyZWFkeSBhY3RpdmUu
Iik7cmV0dXJufWVsc2UgdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgYWN0aXZhdGUgYSBudWxsIHNlcnZp
Y2Ugd29ya2VyISIpO3JldHVybiBuZXcgUHJvbWlzZSgoaSxyKT0+e3QuYWRkRXZlbnRMaXN0ZW5lcigi
c3RhdGVjaGFuZ2UiLCgpPT57dC5zdGF0ZT09PSJhY3RpdmF0ZWQiJiYoY29uc29sZS5kZWJ1ZygiQWN0
aXZhdGVkIG5ldyBzZXJ2aWNlIHdvcmtlci4iKSxpKCkpfSl9KX19O3ZhciBnPWNsYXNze2NvbnN0cnVj
dG9yKHQsaT0iZmx1dHRlci1qcyIpe2xldCByPXR8fFsvXC5qcyQvLC9cLm1qcyQvXTt3aW5kb3cudHJ1
c3RlZFR5cGVzJiYodGhpcy5wb2xpY3k9dHJ1c3RlZFR5cGVzLmNyZWF0ZVBvbGljeShpLHtjcmVhdGVT
Y3JpcHRVUkw6ZnVuY3Rpb24oZSl7aWYoZS5zdGFydHNXaXRoKCJibG9iOiIpKXJldHVybiBlO2xldCBu
PW5ldyBVUkwoZSx3aW5kb3cubG9jYXRpb24pLHM9bi5wYXRobmFtZS5zcGxpdCgiLyIpLnBvcCgpO2lm
KHIuc29tZShsPT5sLnRlc3QocykpKXJldHVybiBuLnRvU3RyaW5nKCk7Y29uc29sZS5lcnJvcigiVVJM
IHJlamVjdGVkIGJ5IFRydXN0ZWRUeXBlcyBwb2xpY3kiLGksIjoiLGUsIihkb3dubG9hZCBwcmV2ZW50
ZWQpIil9fSkpfX07dmFyIGs9YT0+e2xldCB0PVdlYkFzc2VtYmx5LmNvbXBpbGVTdHJlYW1pbmcoZmV0
Y2goYSkpO3JldHVybihpLHIpPT4oKGFzeW5jKCk9PntsZXQgZT1hd2FpdCB0LG49YXdhaXQgV2ViQXNz
ZW1ibHkuaW5zdGFudGlhdGUoZSxpKTtyKG4sZSl9KSgpLHt9KX07dmFyIEk9KGEsdCxpLHIpPT4od2lu
ZG93LmZsdXR0ZXJDYW52YXNLaXRMb2FkZWQ9KGFzeW5jKCk9PntpZih3aW5kb3cuZmx1dHRlckNhbnZh
c0tpdClyZXR1cm4gd2luZG93LmZsdXR0ZXJDYW52YXNLaXQ7bGV0IGU9aS5oYXNDaHJvbWl1bUJyZWFr
SXRlcmF0b3JzJiZpLmhhc0ltYWdlQ29kZWNzO2lmKCFlJiZ0LmNhbnZhc0tpdFZhcmlhbnQ9PSJjaHJv
bWl1bSIpdGhyb3ciQ2hyb21pdW0gQ2FudmFzS2l0IHZhcmlhbnQgc3BlY2lmaWNhbGx5IHJlcXVlc3Rl
ZCwgYnV0IHVuc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlciI7bGV0IG49ZSYmdC5jYW52YXNLaXRWYXJp
YW50IT09ImZ1bGwiLHM9cjtuJiYocz1kKHMsImNocm9taXVtIikpO2xldCBvPWQocywiY2FudmFza2l0
LmpzIik7YS5mbHV0dGVyVFQucG9saWN5JiYobz1hLmZsdXR0ZXJUVC5wb2xpY3kuY3JlYXRlU2NyaXB0
VVJMKG8pKTtsZXQgbD1rKGQocywiY2FudmFza2l0Lndhc20iKSkscD1hd2FpdCBpbXBvcnQobyk7cmV0
dXJuIHdpbmRvdy5mbHV0dGVyQ2FudmFzS2l0PWF3YWl0IHAuZGVmYXVsdCh7aW5zdGFudGlhdGVXYXNt
Omx9KSx3aW5kb3cuZmx1dHRlckNhbnZhc0tpdH0pKCksd2luZG93LmZsdXR0ZXJDYW52YXNLaXRMb2Fk
ZWQpO3ZhciBVPWFzeW5jKGEsdCxpLHIpPT57bGV0IGU9ZChyLCJza3dhc20uanMiKSxuPWU7YS5mbHV0
dGVyVFQucG9saWN5JiYobj1hLmZsdXR0ZXJUVC5wb2xpY3kuY3JlYXRlU2NyaXB0VVJMKG4pKTtsZXQg
cz1rKGQociwic2t3YXNtLndhc20iKSk7cmV0dXJuIGF3YWl0KGF3YWl0IGltcG9ydChuKSkuZGVmYXVs
dCh7aW5zdGFudGlhdGVXYXNtOnMsbG9jYXRlRmlsZToobCxwKT0+e2xldCBjPXArbDtyZXR1cm4gYy5l
bmRzV2l0aCgiLndvcmtlci5qcyIpP1VSTC5jcmVhdGVPYmplY3RVUkwobmV3IEJsb2IoW2BpbXBvcnRT
Y3JpcHRzKCcke2N9Jyk7YF0se3R5cGU6ImFwcGxpY2F0aW9uL2phdmFzY3JpcHQifSkpOmN9LG1haW5T
Y3JpcHRVcmxPckJsb2I6ZX0pfTt2YXIgQz1jbGFzc3thc3luYyBsb2FkRW50cnlwb2ludCh0KXtsZXR7
c2VydmljZVdvcmtlcjppLC4uLnJ9PXR8fHt9LGU9bmV3IGcsbj1uZXcgeTtuLnNldFRydXN0ZWRUeXBl
c1BvbGljeShlLnBvbGljeSksYXdhaXQgbi5sb2FkU2VydmljZVdvcmtlcihpKS5jYXRjaChvPT57Y29u
c29sZS53YXJuKCJFeGNlcHRpb24gd2hpbGUgbG9hZGluZyBzZXJ2aWNlIHdvcmtlcjoiLG8pfSk7bGV0
IHM9bmV3IHY7cmV0dXJuIHMuc2V0VHJ1c3RlZFR5cGVzUG9saWN5KGUucG9saWN5KSx0aGlzLmRpZENy
ZWF0ZUVuZ2luZUluaXRpYWxpemVyPXMuZGlkQ3JlYXRlRW5naW5lSW5pdGlhbGl6ZXIuYmluZChzKSxz
LmxvYWRFbnRyeXBvaW50KHIpfWFzeW5jIGxvYWQoe3NlcnZpY2VXb3JrZXJTZXR0aW5nczp0LG9uRW50
cnlwb2ludExvYWRlZDppLG5vbmNlOnIsY29uZmlnOmV9PXt9KXtlPz89e307bGV0IG49X2ZsdXR0ZXIu
YnVpbGRDb25maWc7aWYoIW4pdGhyb3ciRmx1dHRlckxvYWRlci5sb2FkIHJlcXVpcmVzIF9mbHV0dGVy
LmJ1aWxkQ29uZmlnIHRvIGJlIHNldCI7bGV0IHM9dT0+e3N3aXRjaCh1KXtjYXNlInNrd2FzbSI6cmV0
dXJuIHcuY3Jvc3NPcmlnaW5Jc29sYXRlZCYmdy5oYXNDaHJvbWl1bUJyZWFrSXRlcmF0b3JzJiZ3Lmhh
c0ltYWdlQ29kZWNzJiZ3LnN1cHBvcnRzV2FzbUdDO2RlZmF1bHQ6cmV0dXJuITB9fSxvPSh1LG0pPT57
c3dpdGNoKHUucmVuZGVyZXIpe2Nhc2UiYXV0byI6cmV0dXJuIG09PSJjYW52YXNraXQifHxtPT0iaHRt
bCI7ZGVmYXVsdDpyZXR1cm4gdS5yZW5kZXJlcj09bX19LGw9dT0+dS5jb21waWxlVGFyZ2V0PT09ImRh
cnQyd2FzbSImJiF3LnN1cHBvcnRzV2FzbUdDfHxlLnJlbmRlcmVyJiYhbyh1LGUucmVuZGVyZXIpPyEx
OnModS5yZW5kZXJlcikscD1uLmJ1aWxkcy5maW5kKGwpO2lmKCFwKXRocm93IkZsdXR0ZXJMb2FkZXIg
Y291bGQgbm90IGZpbmQgYSBidWlsZCBjb21wYXRpYmxlIHdpdGggY29uZmlndXJhdGlvbiBhbmQgZW52
aXJvbm1lbnQuIjtsZXQgYz17fTtjLmZsdXR0ZXJUVD1uZXcgZyx0JiYoYy5zZXJ2aWNlV29ya2VyTG9h
ZGVyPW5ldyB5LGMuc2VydmljZVdvcmtlckxvYWRlci5zZXRUcnVzdGVkVHlwZXNQb2xpY3koYy5mbHV0
dGVyVFQucG9saWN5KSxhd2FpdCBjLnNlcnZpY2VXb3JrZXJMb2FkZXIubG9hZFNlcnZpY2VXb3JrZXIo
dCkuY2F0Y2godT0+e2NvbnNvbGUud2FybigiRXhjZXB0aW9uIHdoaWxlIGxvYWRpbmcgc2VydmljZSB3
b3JrZXI6Iix1KX0pKTtsZXQgZj1UKGUsbik7cC5yZW5kZXJlcj09PSJjYW52YXNraXQiP2MuY2FudmFz
S2l0PUkoYyxlLHcsZik6cC5yZW5kZXJlcj09PSJza3dhc20iJiYoYy5za3dhc209VShjLGUsdyxmKSk7
bGV0IGg9bmV3IHY7cmV0dXJuIGguc2V0VHJ1c3RlZFR5cGVzUG9saWN5KGMuZmx1dHRlclRULnBvbGlj
eSksdGhpcy5kaWRDcmVhdGVFbmdpbmVJbml0aWFsaXplcj1oLmRpZENyZWF0ZUVuZ2luZUluaXRpYWxp
emVyLmJpbmQoaCksaC5sb2FkKHAsYyxlLHIsaSl9fTt3aW5kb3cuX2ZsdXR0ZXJ8fCh3aW5kb3cuX2Zs
dXR0ZXI9e30pO3dpbmRvdy5fZmx1dHRlci5sb2FkZXJ8fCh3aW5kb3cuX2ZsdXR0ZXIubG9hZGVyPW5l
dyBDKTt9KSgpOwovLyMgc291cmNlTWFwcGluZ1VSTD1mbHV0dGVyLmpzLm1hcAo=
  ''';
}
